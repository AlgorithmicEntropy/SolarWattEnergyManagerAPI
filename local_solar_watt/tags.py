BATTERY = {
    "device_state": "StateDevice",
    "work_in": "WorkIn",
    "work_out": "WorkOut",
    "power_out": "PowerOut",
    "power_in": "PowerIn"
}

BATTERY_METER = {
    "id_manufacturer": "IdManufacturer",
    "id_firmware": "IdFirmware",
    "device_state": "StateDevice",
    "ac_power": "ACPower",
    "backup_state_of_charge": "BackupStateOfCharge",
    "battery_error": "BatteryError",
    "state_error_list": "StateErrorList",
    "count_battery_modules": "CountBatteryModules",
    "current_battery_in": "CurrentBatteryIn",
    "current_battery_out": "CurrentBatteryOut",
    "factor_forecast": "FactorForecast",
    "url": "IdUrlPdg",
    "mode_converter": "ModeConverter",
    "power_ac_in": "PowerACIn",
    "power_ac_out": "PowerACOut",
    "power_yield_sum": "PowerYieldSum",
    "state_of_charge": "StateOfCharge",
    "state_of_health": "StateOfHealth",
    "system_error": "SysErr",
    "system_status": "SysStat",
    "temp_packs": "TemparaturePacks",  # typo in API lol
    "temp_base": "TemperatureBase",
    "temp_battery": "TemperatureBattery",
    "temp_grm": "TemperatureGRM",
    "work_ac_in": "WorkACIn",
    "work_ac_out": "WorkACOut",
    "work_capacity": "WorkCapacity",
    "work_charge": "WorkCharge",
    "work_charged": "WorkCharged",
    "work_discharged": "WorkDischarged"
}

INVERTER = {
    "id_manufacturer": "IdManufacturer",
    "id_firmware": "IdFirmware",
    "device_state": "StateDevice",
    "state_error_list": "StateErrorList",
    "ac_power": "ACPower",
    "power_ac_out": "PowerACOut",
    "power_string_dc_in": "PowerStringDCIn",
    "power_yield_sum": "PowerYieldSum",
    "work_ac_out": "WorkACOut"
}

LOCATION = {
    "device_state": "StateDevice",
    "power_buffered": "PowerBuffered",
    "power_buffered_from_grid": "PowerBufferedFromGrid",
    "power_buffered_from_producers": "PowerBufferedFromProducers",
    "power_consumed": "PowerConsumed",
    "power_consumed_from_grid": "PowerConsumedFromGrid",
    "power_consumed_from_producers": "PowerConsumedFromProducers",
    "power_consumed_from_storage": "PowerConsumedFromStorage",
    "power_in": "PowerIn",
    "power_out": "PowerOut",
    "power_out_from_producers": "PowerOutFromProducers",
    "power_out_from_storage": "PowerOutFromStorage",
    "power_produced": "PowerProduced",
    "power_released": "PowerReleased",
    "power_self_supplied": "PowerSelfSupplied",
    "power_self_consumed": "PowerSelfConsumed",
    "work_buffered": "WorkBuffered",
    "work_buffered_from_grid": "WorkBufferedFromGrid",
    "work_buffered_from_producers": "WorkBufferedFromProducers",
    "work_consumed": "WorkConsumed",
    "work_consumed_from_grid": "WorkConsumedFromGrid",
    "work_consumed_from_producers": "WorkConsumedFromProducers",
    "work_consumed_from_storage": "WorkConsumedFromStorage",
    "work_in": "WorkIn",
    "work_out": "WorkOut",
    "work_out_from_producers": "WorkOutFromProducers",
    "work_out_from_storage": "WorkOutFromStorage",
    "work_produced": "WorkProduced",
    "work_released": "WorkReleased",
    "work_self_supplied": "WorkSelfSupplied",
    "work_self_consumed": "WorkSelfConsumed",
    "price_work_in": "PriceWorkIn"
}
